service: tgslidesbot

plugins:
  - serverless-dynamodb-local
  - serverless-offline
#  - serverless-dotenv-plugin
#  - serverless-yandex-cloud

custom:
  config: ${file(.env.yml):${opt:stage, self:provider.stage}}
  dynamodb:
    stages:
      - prod
    start:
      migrate: true
      noStart: true
provider:
  name: aws
#  name: yandex-cloud
  runtime: nodejs12.x
  stage: prod
  region: us-east-1
  memorySize: 128
  timeout: 100
  endpointType: regional
  environment:
    conference_days: ${self:custom.config.conference_days}
    conference_halls: ${self:custom.config.conference_halls}
    bot_token: ${self:custom.config.bot_token}
    google_client_email: ${self:custom.config.google_client_email}
    google_private_key: ${self:custom.config.google_private_key}
    drive_folder_id: ${self:custom.config.drive_folder_id}
    taas_api_key: ${self:custom.config.taas_api_key}
    slides_chat_id: ${self:custom.config.slides_chat_id}
    direct_download: ${self:custom.config.direct_download}
    dynamodb_table: ${self:custom.config.dynamodb_table}
    region: ${self:provider.region}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${self:provider.region}:*:table/${self:custom.config.dynamodb_table}"
functions:
  telegramEventHandler:
    handler: api/telegram.eventHandler
    description: Handle events from telegram
    events:
      - http:
          path: webhook
          method: post
          cors: true
  telegramSetWebhook:
    handler: api/webHookSetter.setWebhook
    description: Set webhook in telegram servers
    events:
      - http:
          path: setWebhook
          method: post
          cors: true
  bigFileUploader:
    handler: api/bigFile.eventHandler
    description: Uploads big files through proxy
    events:
      - http:
          path: uploadBigFile
          method: post
          cors: true
resources:
  Resources:
    TgSlidesBot:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        TableName: ${self:custom.config.dynamodb_table}
        AttributeDefinitions:
          - AttributeName: SessionKey
            AttributeType: S
        KeySchema:
          - AttributeName: SessionKey
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TimeToLiveSpecification:
          AttributeName: ttl
          Enabled: true